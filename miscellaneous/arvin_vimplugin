
## 
referance
http://ivan7645.github.io/2016/07/12/vim_to_si/
https://blog.easwy.com/archives/vim-cscope-ctags/
https://blog.easwy.com/archives/advanced-vim-skills-catalog/

# ====================================
# ctags install by apt-get
# ====================================
# https://github.com/scps950707/ctags-generator 

ctags -R # execute in the folder that is source code folder.
ctags -R --c++-kinds=+p --fields=+iaS --extra=+q .
ctags -R --c-kinds=+p --fields=+iaS --extra=+q .
ctags -R --exclude=*.html --exclude=.git --exclude=*.js # other programming language also caues ctag stuck.
ctags -R --exclude=target_rootfs

ctags --list-kinds   # list parameter for all language
ctags --list-kinds=c # list parameter for c language
# p -> function prototypes [off]
# l -> local variables [off]
# --fields =
# i -> inheritance information
# a -> Access or export of class members
# S -> Signature of routing

# generate tag file to tags_20180620S1 and recurse from folder ./20180620S1/
# suggest to use default ouput filename "ctags", because other plugin will use tags filename for search.
ctags -f tags_20180620S1 -R ./20180620S1/

# in vim
:set tags=/home/xxx/src/tags
:set tags            # check the PATH

Ctrl + ] #jump to functoin define
Ctrl + t # return to function call

:help tselect
:ts[elect]   # list all of the definitions of the last tag
:tn[ext]     # jump to the next definition for the last tag
:tp[rev]     # jump to the previous definition for the last tag

:tags        # Show the contents of the tag stack
:[count]pop  # jump to [count] older entry in tag stack

:tag /aaa    # [not good]list all the tags that contain "aaa"

# press F5 to rebuld tags and update tag list
map <F5> :!ctags -R --c++-kinds=+p --fields=+iaS --extra=+q .<CR><CR> :TlistUpdate<CR>

# ====================================
# taglist.vim
# ====================================
:TlistOpen
# it MUST in taglist window, not in command line
+ or zc : fold open
- or zo : fold close
u       : renew tags
<Space> : display the currunt define without jump to the file   
[[      : jump to previous file
]]      : jump to next file


# ====================================
# cscope install by apt-get
# ====================================

cscope -Rbqk # only search *.c/.h/.l/.y
             # execute in the folder that is source code folder. 

find ./  -name "*.c" -o -name "*.h" -o -name "*.cpp" > cscope.files
find . -type f > cscope.files # added all file to the search list
cscope -Rbqk -i cscope.files  # create tags database from cscope.files

# in vim
:cs add cscope.out

:cs find s {name} # symbol,  find this (name) symbol. 
:cs find g {name} # global,  Find this definition for (name). like as ctags (Ctrl+])
:cs find d {name} # called,  list functions called by this (name).
:cs find c {name} # call,    Find functions calling (name).

:cs find t {name} # text,    Find (name) string.
:cs find e {name} # egrep,   find this egrep pattern. 
:cs find f {name} # file,    Find this (name) file.
:cs find i {name} # include, Find #include this (name)

:scs find [para] {name} # this method will open a new window 
                        # after select a item of search result

:tn[ext]     # jump to the next definition for the last tag
:tp[rev]     # jump to the previous definition for the last tag
:ts[elect]   # list all of the definitions of the last tag


:help cscopequickfix                     # for more information
:set cscopequickfix=s-,c-,d-,i-,t-,e-    # cscope buffer to quickfix buffer
:set cscopequickfix=""                   #
:cw   # view the lisit of matches
:cn   # jump to the next match
:cp   # jump to the previous match

# press F6 to relbuild cscope
map <F6> :!cscope -Rbqk<CR><CR>

# press F4 to reload cscope.out
map <F4> :cs add ./cscope.out<CR><CR><CR> :cs reset<CR>



